(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{137:function(t,s,e){e(13),e(138),t.exports=e(139)},138:function(t,s,e){"use strict";e.r(s);var i=e(0),a=e(2),n=e.n(a),h=e(3),d=e(4);class o extends d.a{static get Defaults(){return i.a.extend({},d.a.Defaults,{enableMq:"md-up"})}init(){const t=this.$container;this.$list=t.find(".js-awards-list"),this.$headings=t.find(".js-awards-heading"),this.$contents=t.find(".js-awards-content"),this.active=null}enable(){super.enable()&&(h.a.hasHoverSupport()?this.$headings.on("mouseenter."+this.ns,this.handleMouseOver.bind(this)).on("mouseleave."+this.ns,this.handleMouseOut.bind(this)):(this.$headings.on("click."+this.ns,this.handleClick.bind(this)),Object(i.a)(document).on("click."+this.ns,this.handleClickOutside.bind(this))))}disable(){super.disable()&&(this.$headings.add(document).off("."+this.ns),this.setHighlighted(null))}destroy(){Object(i.a)(document).off("."+this.ns)}handleClick(t){const s=Object(i.a)(t.currentTarget).data("id");this.setHighlighted(s)}handleClickOutside(t){this.active&&0===Object(i.a)(t.target).closest(this.$headings).length&&this.setHighlighted(null)}handleMouseOver(t){const s=Object(i.a)(t.currentTarget).data("id");this.setHighlighted(s),this.$list.addClass("has-hovered-item")}handleMouseOut(t){Object(i.a)(t.currentTarget).data("id");this.setHighlighted(null),this.$list.removeClass("has-hovered-item")}setHighlighted(t){this.active&&this.active!==t&&t&&this.setHighlighted(null),t?(this.$headings.filter(`[data-id="${t}"]`).addClass("is-hovered"),this.$contents.filter(`[data-id="${t}"]`).addClass("is-active")):(this.$headings.removeClass("is-hovered"),this.$contents.removeClass("is-active")),this.active=t}}i.a.fn.awardsList=n()(o)},139:function(t,s,e){"use strict";e.r(s),e.d(s,"default",(function(){return o}));var i=e(1),a=e.n(i),n=e(2),h=e.n(n),d=e(5);e(11);class o{static get Defaults(){return{captureClick:!0,autoResize:!0}}constructor(t,s){const e=this.options=a.a.extend(!0,{},this.constructor.Defaults,s),i=this.$container=a()(t),n=this.$overlay=i.closest(".video-overlay");if(this.ns=Object(d.a)(),this.handleMessage=this.handleMessage.bind(this),this.isPlaying=!1,e.autoResize){const t=parseInt(i.attr("width")),s=parseInt(i.attr("height"));this.ratio=t/s,this.update=this.update.bind(this),this.update(),a()(window).on("resize."+this.ns,this.update.bind(this))}e.captureClick&&n.on("click."+this.ns,this.handleClickEvent.bind(this)),i.on("destroyed",this.destroy.bind(this)),window.addEventListener("message",this.handleMessage)}destroy(){a()(window).off("."+this.ns),window.removeEventListener("message",this.handleMessage)}update(){const t=this.$container,s=t.width(),e=Math.round(s/this.ratio);t.css("height",e)}handleClickEvent(){this.$overlay.removeClass("video-overlay"),this.isPlaying?this.pause():this.play()}handleMessage(t){if(this.$container.get(0).contentWindow===t.source&&t&&t.data){let s=t.data;if("string"==typeof s)try{s=JSON.parse(t.data)}catch(t){}"play"===s.method?this.isPlaying=!0:"pause"===s.method&&(this.isPlaying=!1)}}play(){this.$container.get(0).contentWindow.postMessage({method:"play",value:{}},"*")}pause(){this.$container.get(0).contentWindow.postMessage({method:"pause",value:{}},"*")}}a.a.fn.video=h()(o)}},[[137,0]]]);